--- a/net/minecraft/entity/EntityLiving.java
+++ b/net/minecraft/entity/EntityLiving.java
@@ -20,6 +20,7 @@
 import net.minecraft.entity.item.EntityXPOrb;
 import net.minecraft.entity.monster.EntityCreeper;
 import net.minecraft.entity.monster.EntityGhast;
+import net.minecraft.entity.passive.EntityPig;
 import net.minecraft.entity.passive.EntityWolf;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.projectile.EntityArrow;
@@ -45,6 +46,8 @@
 import net.minecraft.world.World;
 import net.minecraft.world.WorldServer;
 
+import net.minecraftforge.common.ForgeHooks;
+
 public abstract class EntityLiving extends Entity
 {
     private static final float[] field_82177_b = new float[] {0.0F, 0.0F, 0.05F, 0.1F};
@@ -254,6 +257,7 @@
     public void func_70624_b(EntityLiving p_70624_1_)
     {
         this.field_70696_bz = p_70624_1_;
+        ForgeHooks.onLivingSetAttackTarget(this, p_70624_1_);
     }
 
     public boolean func_70686_a(Class p_70686_1_)
@@ -338,6 +342,7 @@
     {
         this.field_70755_b = p_70604_1_;
         this.field_70756_c = this.field_70755_b != null ? 60 : 0;
+        ForgeHooks.onLivingSetAttackTarget(this, p_70604_1_);
     }
 
     protected void func_70088_a()
@@ -599,6 +604,11 @@
 
     public void func_70071_h_()
     {
+        if (ForgeHooks.onLivingUpdate(this))
+        {
+            return;
+        }
+        
         super.func_70071_h_();
 
         if (!this.field_70170_p.field_72995_K)
@@ -778,6 +788,11 @@
 
     public boolean func_70097_a(DamageSource p_70097_1_, int p_70097_2_)
     {
+        if (ForgeHooks.onLivingAttack(this, p_70097_1_, p_70097_2_))
+        {
+            return false;
+        }
+        
         if (this.func_85032_ar())
         {
             return false;
@@ -971,6 +986,11 @@
     {
         if (!this.func_85032_ar())
         {
+            p_70665_2_ = ForgeHooks.onLivingHurt(this, p_70665_1_, p_70665_2_);
+            if (p_70665_2_ <= 0)
+            {
+                return;
+            }
             p_70665_2_ = this.func_70655_b(p_70665_1_, p_70665_2_);
             p_70665_2_ = this.func_70672_c(p_70665_1_, p_70665_2_);
             this.field_70734_aK -= p_70665_2_;
@@ -1017,6 +1037,11 @@
 
     public void func_70645_a(DamageSource p_70645_1_)
     {
+        if (ForgeHooks.onLivingDeath(this, p_70645_1_))
+        {
+            return;
+        }
+        
         Entity var2 = p_70645_1_.func_76346_g();
 
         if (this.field_70744_aE >= 0 && var2 != null)
@@ -1039,6 +1064,10 @@
             {
                 var3 = EnchantmentHelper.func_77519_f((EntityLiving)var2);
             }
+            
+            captureDrops = true;
+            capturedDrops.clear();
+            int var4 = 0;
 
             if (!this.func_70631_g_() && this.field_70170_p.func_82736_K().func_82766_b("doMobLoot"))
             {
@@ -1047,7 +1076,7 @@
 
                 if (this.field_70718_bc > 0)
                 {
-                    int var4 = this.field_70146_Z.nextInt(200) - var3;
+                    var4 = this.field_70146_Z.nextInt(200) - var3;
 
                     if (var4 < 5)
                     {
@@ -1055,6 +1084,16 @@
                     }
                 }
             }
+            
+            captureDrops = false;
+            
+            if (!ForgeHooks.onLivingDrops(this, p_70645_1_, capturedDrops, var3, field_70718_bc > 0, var4))
+            {
+                for (EntityItem item : capturedDrops)
+                {
+                    field_70170_p.func_72838_d(item);
+                }
+            }
         }
 
         this.field_70170_p.func_72960_a(this, (byte)3);
@@ -1091,6 +1130,12 @@
 
     protected void func_70069_a(float p_70069_1_)
     {
+        p_70069_1_ = ForgeHooks.onLivingFall(this, p_70069_1_);
+        if (p_70069_1_ <= 0)
+        {
+            return;
+        }
+        
         super.func_70069_a(p_70069_1_);
         int var2 = MathHelper.func_76123_f(p_70069_1_ - 3.0F);
 
@@ -1287,7 +1332,7 @@
         int var2 = MathHelper.func_76128_c(this.field_70121_D.field_72338_b);
         int var3 = MathHelper.func_76128_c(this.field_70161_v);
         int var4 = this.field_70170_p.func_72798_a(var1, var2, var3);
-        return var4 == Block.field_72055_aF.field_71990_ca || var4 == Block.field_71998_bu.field_71990_ca;
+        return ForgeHooks.isLivingOnLadder(Block.field_71973_m[var4], field_70170_p, var1, var2, var3);
     }
 
     public void func_70014_b(NBTTagCompound p_70014_1_)
@@ -1675,6 +1720,7 @@
         }
 
         this.field_70160_al = true;
+        ForgeHooks.onLivingJump(this);
     }
 
     protected boolean func_70692_ba()
@@ -2144,8 +2190,7 @@
     {
         return this.func_70668_bt() == EnumCreatureAttribute.UNDEAD;
     }
-
-    @SideOnly(Side.CLIENT)
+    
     public void func_70618_n(int p_70618_1_)
     {
         this.field_70713_bf.remove(Integer.valueOf(p_70618_1_));
@@ -2551,5 +2596,43 @@
     public final void func_85034_r(int p_85034_1_)
     {
         this.field_70180_af.func_75692_b(10, Byte.valueOf((byte)p_85034_1_));
+    }
+    
+    /***
+     * Removes all potion effects that have curativeItem as a curative item for its effect
+     * @param curativeItem The itemstack we are using to cure potion effects
+     */
+    public void curePotionEffects(ItemStack curativeItem)
+    {
+        Iterator<Integer> potionKey = field_70713_bf.keySet().iterator();
+    
+        if (field_70170_p.field_72995_K)
+        {
+            return;
+        }
+    
+        while (potionKey.hasNext())
+        {
+            Integer key = potionKey.next();
+            PotionEffect effect = (PotionEffect)field_70713_bf.get(key);
+    
+            if (effect.isCurativeItem(curativeItem))
+            {
+                potionKey.remove();
+                func_70688_c(effect);
+            }
+        }
+    }
+    
+    /**
+     * Returns true if the entity's rider (EntityPlayer) should face forward when mounted.
+     * currently only used in vanilla code by pigs.
+     *
+     * @param player The player who is riding the entity.
+     * @return If the player should orient the same direction as this entity.
+     */
+    public boolean shouldRiderFaceForward(EntityPlayer player)
+    {
+        return this instanceof EntityPig;
     }
 }
