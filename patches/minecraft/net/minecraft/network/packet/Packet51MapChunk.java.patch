--- a/net/minecraft/network/packet/Packet51MapChunk.java
+++ b/net/minecraft/network/packet/Packet51MapChunk.java
@@ -5,6 +5,7 @@
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
 import java.io.IOException;
+import java.util.concurrent.Semaphore;
 import java.util.zip.DataFormatException;
 import java.util.zip.Deflater;
 import java.util.zip.Inflater;
@@ -23,6 +24,8 @@
     public boolean field_73598_e;
     private int field_73602_h;
     private static byte[] field_73603_i = new byte[196864];
+    
+    private Semaphore deflateGate;
 
     public Packet51MapChunk()
     {
@@ -36,17 +39,23 @@
         this.field_73599_b = p_i3323_1_.field_76647_h;
         this.field_73598_e = p_i3323_2_;
         Packet51MapChunkData var4 = func_73594_a(p_i3323_1_, p_i3323_2_, p_i3323_3_);
-        Deflater var5 = new Deflater(-1);
         this.field_73597_d = var4.field_74581_c;
         this.field_73600_c = var4.field_74580_b;
-
+        
+        this.field_73596_g = var4.field_74582_a;
+        this.deflateGate = new Semaphore(1);
+    }
+    
+    private void deflate()
+    {
+        Deflater var5 = new Deflater(-1);
         try
         {
-            this.field_73596_g = var4.field_74582_a;
-            var5.setInput(var4.field_74582_a, 0, var4.field_74582_a.length);
+            var5.setInput(field_73596_g, 0, field_73596_g.length);
             var5.finish();
-            this.field_73595_f = new byte[var4.field_74582_a.length];
-            this.field_73602_h = var5.deflate(this.field_73595_f);
+            byte[] deflated = new byte[field_73596_g.length];
+            this.field_73602_h = var5.deflate(deflated);
+            this.field_73595_f = deflated;
         }
         finally
         {
@@ -71,13 +80,16 @@
         p_73267_1_.readFully(field_73603_i, 0, this.field_73602_h);
         int var2 = 0;
         int var3;
+        int msb = 0; //BugFix: MC does not read the MSB array from the packet properly, causing issues for servers that use blocks > 256
 
         for (var3 = 0; var3 < 16; ++var3)
         {
             var2 += this.field_73600_c >> var3 & 1;
+            msb  += this.field_73597_d >> var3 & 1;
         }
 
         var3 = 12288 * var2;
+        var3 += 2048 * msb;
 
         if (this.field_73598_e)
         {
@@ -104,6 +116,16 @@
 
     public void func_73273_a(DataOutputStream p_73273_1_) throws IOException
     {
+        if (field_73595_f == null)
+        {
+            deflateGate.acquireUninterruptibly();
+            if (field_73595_f == null)
+            {
+                deflate();
+            }
+            deflateGate.release();
+        }
+        
         p_73273_1_.writeInt(this.field_73601_a);
         p_73273_1_.writeInt(this.field_73599_b);
         p_73273_1_.writeBoolean(this.field_73598_e);
