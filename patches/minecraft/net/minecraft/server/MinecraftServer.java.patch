--- ../src-base/minecraft/net/minecraft/server/MinecraftServer.java
+++ ../src-work/minecraft/net/minecraft/server/MinecraftServer.java
@@ -1,5 +1,8 @@
 package net.minecraft.server;
 
+import cpw.mods.fml.common.FMLCommonHandler;
+import cpw.mods.fml.relauncher.ArgsWrapper;
+import cpw.mods.fml.relauncher.FMLRelauncher;
 import cpw.mods.fml.relauncher.Side;
 import cpw.mods.fml.relauncher.SideOnly;
 import java.awt.GraphicsEnvironment;
@@ -7,10 +10,7 @@
 import java.io.IOException;
 import java.security.KeyPair;
 import java.text.SimpleDateFormat;
-import java.util.ArrayList;
-import java.util.Date;
-import java.util.Iterator;
-import java.util.List;
+import java.util.*;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 import net.minecraft.block.BlockDispenser;
@@ -62,6 +62,9 @@
 import net.minecraft.world.storage.ISaveFormat;
 import net.minecraft.world.storage.ISaveHandler;
 import net.minecraft.world.storage.WorldInfo;
+import net.minecraftforge.common.DimensionManager;
+import net.minecraftforge.common.MinecraftForge;
+import net.minecraftforge.event.world.WorldEvent;
 
 public abstract class MinecraftServer implements ICommandSender, Runnable, IPlayerUsage
 {
@@ -98,7 +101,8 @@
     public final long[] field_71313_h = new long[100];
     public final long[] field_71314_i = new long[100];
     public final long[] field_71311_j = new long[100];
-    public long[][] field_71312_k;
+    //public long[][] timeOfLastDimensionTick;
+    public Hashtable<Integer, long[]> worldTickTimes = new Hashtable<Integer, long[]>();
     private KeyPair field_71292_I;
     private String field_71293_J;
     private String field_71294_K;
@@ -171,8 +175,6 @@
     {
         this.func_71237_c(p_71247_1_);
         this.func_71192_d("menu.loadingLevel");
-        this.field_71305_c = new WorldServer[3];
-        this.field_71312_k = new long[this.field_71305_c.length][100];
         ISaveHandler var7 = this.field_71310_m.func_75804_a(p_71247_1_, true);
         WorldInfo var9 = var7.func_75757_d();
         WorldSettings var8;
@@ -192,45 +194,22 @@
             var8.func_77159_a();
         }
 
-        for (int var10 = 0; var10 < this.field_71305_c.length; ++var10)
+        WorldServer overWorld = (func_71242_L() ? new DemoWorldServer(this, var7, p_71247_2_, 0, field_71304_b) : new WorldServer(this, var7, p_71247_2_, 0, var8, field_71304_b));
+        for (int dim : DimensionManager.getStaticDimensionIDs())
         {
-            byte var11 = 0;
-
-            if (var10 == 1)
-            {
-                var11 = -1;
-            }
-
-            if (var10 == 2)
-            {
-                var11 = 1;
-            }
-
-            if (var10 == 0)
-            {
-                if (this.func_71242_L())
-                {
-                    this.field_71305_c[var10] = new DemoWorldServer(this, var7, p_71247_2_, var11, this.field_71304_b);
-                }
-                else
-                {
-                    this.field_71305_c[var10] = new WorldServer(this, var7, p_71247_2_, var11, var8, this.field_71304_b);
-                }
-            }
-            else
-            {
-                this.field_71305_c[var10] = new WorldServerMulti(this, var7, p_71247_2_, var11, var8, this.field_71305_c[0], this.field_71304_b);
-            }
-
-            this.field_71305_c[var10].func_72954_a(new WorldManager(this, this.field_71305_c[var10]));
+            WorldServer world = (dim == 0 ? overWorld : new WorldServerMulti(this, var7, p_71247_2_, dim, var8, overWorld, field_71304_b));
+            world.func_72954_a(new WorldManager(this, world));
 
             if (!this.func_71264_H())
             {
-                this.field_71305_c[var10].func_72912_H().func_76060_a(this.func_71265_f());
+                world.func_72912_H().func_76060_a(this.func_71265_f());
             }
 
             this.field_71318_t.func_72364_a(this.field_71305_c);
+            MinecraftForge.EVENT_BUS.post(new WorldEvent.Load(world));
         }
+        
+        this.field_71318_t.func_72364_a(new WorldServer[]{ overWorld });
 
         this.func_71226_c(this.func_71232_g());
         this.func_71222_d();
@@ -342,7 +321,14 @@
             for (int var1 = 0; var1 < this.field_71305_c.length; ++var1)
             {
                 WorldServer var2 = this.field_71305_c[var1];
+                MinecraftForge.EVENT_BUS.post(new WorldEvent.Unload(var2));
                 var2.func_73041_k();
+            }
+            
+            WorldServer[] tmp = field_71305_c;
+            for (WorldServer world : tmp)
+            {
+                DimensionManager.setWorld(world.field_73011_w.field_76574_g, null);
             }
 
             if (this.field_71307_n != null && this.field_71307_n.func_76468_d())
@@ -378,7 +364,11 @@
         {
             if (this.func_71197_b())
             {
+                FMLCommonHandler.instance().handleServerStarted();
+                
                 long var1 = System.currentTimeMillis();
+                
+                FMLCommonHandler.instance().onWorldLoadTick(field_71305_c);
 
                 for (long var50 = 0L; this.field_71317_u; this.field_71296_Q = true)
                 {
@@ -417,6 +407,7 @@
 
                     Thread.sleep(1L);
                 }
+                FMLCommonHandler.instance().handleServerStopping();
             }
             else
             {
@@ -425,6 +416,10 @@
         }
         catch (Throwable var48)
         {
+            if (FMLCommonHandler.instance().shouldServerBeKilledQuietly())
+            {
+                return;
+            }
             var48.printStackTrace();
             field_71306_a.log(Level.SEVERE, "Encountered an unexpected exception " + var48.getClass().getSimpleName(), var48);
             CrashReport var2 = null;
@@ -455,6 +450,10 @@
         {
             try
             {
+                if (FMLCommonHandler.instance().shouldServerBeKilledQuietly())
+                {
+                    return;
+                }
                 this.func_71260_j();
                 this.field_71316_v = true;
             }
@@ -464,6 +463,7 @@
             }
             finally
             {
+                FMLCommonHandler.instance().handleServerStopped();
                 this.func_71240_o();
             }
         }
@@ -484,8 +484,10 @@
 
     public void func_71217_p()
     {
+        FMLCommonHandler.instance().rescheduleTicks(Side.SERVER);
         long var1 = System.nanoTime();
         AxisAlignedBB.func_72332_a().func_72298_a();
+        FMLCommonHandler.instance().onPreServerTick();
         ++this.field_71315_w;
 
         if (this.field_71295_T)
@@ -531,6 +533,7 @@
 
         this.field_71304_b.func_76319_b();
         this.field_71304_b.func_76319_b();
+        FMLCommonHandler.instance().onPostServerTick();
     }
 
     public void func_71190_q()
@@ -538,13 +541,15 @@
         this.field_71304_b.func_76320_a("levels");
         int var1;
 
-        for (var1 = 0; var1 < this.field_71305_c.length; ++var1)
+        Integer[] ids = DimensionManager.getIDs(this.field_71315_w % 200 == 0);
+        for (int x = 0; x < ids.length; x++)
         {
+            int id = ids[x];
             long var2 = System.nanoTime();
 
-            if (var1 == 0 || this.func_71255_r())
+            if (id == 0 || this.func_71255_r())
             {
-                WorldServer var4 = this.field_71305_c[var1];
+                WorldServer var4 = DimensionManager.getWorld(id);
                 this.field_71304_b.func_76320_a(var4.func_72912_H().func_76065_j());
                 this.field_71304_b.func_76320_a("pools");
                 var4.func_82732_R().func_72343_a();
@@ -558,6 +563,7 @@
                 }
 
                 this.field_71304_b.func_76320_a("tick");
+                FMLCommonHandler.instance().onPreWorldTick(var4);
                 CrashReport var6;
 
                 try
@@ -582,6 +588,7 @@
                     throw new ReportedException(var6);
                 }
 
+                FMLCommonHandler.instance().onPostWorldTick(var4);
                 this.field_71304_b.func_76319_b();
                 this.field_71304_b.func_76320_a("tracker");
                 var4.func_73039_n().func_72788_a();
@@ -589,8 +596,11 @@
                 this.field_71304_b.func_76319_b();
             }
 
-            this.field_71312_k[var1][this.field_71315_w % 100] = System.nanoTime() - var2;
+            worldTickTimes.get(id)[this.field_71315_w % 100] = System.nanoTime() - var2;
         }
+        
+        this.field_71304_b.func_76318_c("dim_unloading");
+        DimensionManager.unloadWorlds(worldTickTimes);
 
         this.field_71304_b.func_76318_c("connection");
         this.func_71212_ac().func_71747_b();
@@ -633,7 +643,13 @@
 
     public WorldServer func_71218_a(int p_71218_1_)
     {
-        return p_71218_1_ == -1 ? this.field_71305_c[1] : (p_71218_1_ == 1 ? this.field_71305_c[2] : this.field_71305_c[0]);
+        WorldServer ret = DimensionManager.getWorld(p_71218_1_);
+        if (ret == null)
+        {
+            DimensionManager.initDimension(p_71218_1_);
+            ret = DimensionManager.getWorld(p_71218_1_);
+        }
+        return ret;
     }
 
     @SideOnly(Side.SERVER)
@@ -709,7 +725,7 @@
 
     public String getServerModName()
     {
-        return "vanilla";
+        return "forge,fml";
     }
 
     public CrashReport func_71230_b(CrashReport p_71230_1_)
@@ -931,6 +947,7 @@
 
             if (var2 != null)
             {
+                MinecraftForge.EVENT_BUS.post(new WorldEvent.Unload(var2));
                 var2.func_73041_k();
             }
         }
@@ -1150,6 +1167,13 @@
     @SideOnly(Side.SERVER)
     public static void main(String[] p_main_0_)
     {
+        FMLRelauncher.handleServerRelaunch(new ArgsWrapper(p_main_0_));
+    }
+    
+    @SideOnly(Side.SERVER)
+    public static void fmlReentry(ArgsWrapper wrap)
+    {
+        String[] par0ArrayOfStr = wrap.args;
         StatList.func_75919_a();
 
         try
@@ -1162,10 +1186,10 @@
             boolean var6 = false;
             int var7 = -1;
 
-            for (int var8 = 0; var8 < p_main_0_.length; ++var8)
+            for (int var8 = 0; var8 < par0ArrayOfStr.length; ++var8)
             {
-                String var9 = p_main_0_[var8];
-                String var10 = var8 == p_main_0_.length - 1 ? null : p_main_0_[var8 + 1];
+                String var9 = par0ArrayOfStr[var8];
+                String var10 = var8 == par0ArrayOfStr.length - 1 ? null : par0ArrayOfStr[var8 + 1];
                 boolean var11 = false;
 
                 if (!var9.equals("nogui") && !var9.equals("--nogui"))
